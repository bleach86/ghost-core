name: Cross-compile Bitcoin Core for macOS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool autotools-dev automake \
        pkg-config bsdmainutils python3 git cmake pkg-config curl python3-setuptools \
        curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev \
        libz-dev libbz2-dev libtinfo5

    - name: Download and set up custom macOS cross-compilation tools
      run: |
        mkdir SDKs && cd SDKs && \ 
        curl -L -o mac-os-cross.tar.gz https://github.com/bleach86/ghost-build-tools/releases/download/v0.1.0/mac-os-cross.tar.gz
        tar -xzf mac-os-cross.tar.gz
        export OSX_CROSS_PATH=$(pwd)/
        echo "export OSX_CROSS_PATH=${OSX_CROSS_PATH}" >> $GITHUB_ENV
        cd ..

    - name: Set up macOS SDK
      run: |
        export OSX_SDK_PATH=$OSX_CROSS_PATH/
        echo "SDK_PATH=${OSX_SDK_PATH}" >> $GITHUB_ENV
        echo "SDK_PATH=${OSX_SDK_PATH}"

    - name: Build dependencies
      run: |
        cd depends
        make HOST=x86_64-apple-darwin16 SDK_PATH=$SDK_PATH -j$(nproc)

    - name: Configure Bitcoin Core
      run: |
        ./autogen.sh
        CONFIG_SITE=$PWD/depends/x86_64-apple-darwin16/share/config.site ./configure --prefix=/ && \
        make -j$(nproc) && \
        make deploy

    - name: Build Bitcoin Core
      run: make -j$(nproc)

    #- name: Upload artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: bitcoin-core-macos
    #    path: src/bitcoind
